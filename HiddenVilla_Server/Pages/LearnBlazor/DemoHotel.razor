@page "/demoHotel"
@using Model
@using HiddenVilla_Server.Pages.LearnBlazor.LearnBlazorComponent　　@*コンポーネントの参照によって部品化したファイルを読み込む*@

<h1>部屋の種類・アメニティ</h1>
<div class="border p-2 mt-2" style="background-color:lightgrey">
    @*m=マージン、mt=マージントップ、style="background-color:azureは薄い水色"*@

    <h2 class="text-info">部屋一覧</h2> @*text-infoはbackground-colorと同じになる*@
    <div class="row container">

        <div class="col-12">
            <h4 class="text-info">ホテルの部屋</h4>
            <span>選択した部屋 = @SelectedRooms</span>
     
        </div>

        @foreach (var room in RoomsList)@*roomがBlazorRoom*@
        {
            <IndividualRoom OnRoomCheckBoxSelection="RoomSelectionCounterChanged" Room="@room"></IndividualRoom> @*OnRoomCheckBoxSelectionやRoomはパラメーターとしてIndividualRoomにプロパティを設定しないといけない*@
        }

        <div class="col-12 mt-4">
            <h4 class="text-info">ホテルのアメニティ</h4>
        </div>
        @foreach (var amenity in AmenitiesList)
        {
          <IndividualAmenities OnAmenitySelection="AmenitySelectionChanged" Amenities="@amenity"> @*AmenitiesはIndividualAmenitiesのパラメータ*@
               <FirstFragment>#1</FirstFragment>
               <SecondFragment>#2</SecondFragment>
          </IndividualAmenities>
        }
    </div>
    <div class="col-12">
        <p class="text-secondary">選択したアメニティ：@SelectedAmenity</p>
    </div>
</div>




@code{


    public int SelectedRooms { get; set; } = 0;
    public string SelectedAmenity { get; set; } = "";

    List<BlazorRoom> RoomsList = new List<BlazorRoom>();
    List<BlazorAmenities> AmenitiesList = new List<BlazorAmenities>();



    protected override void OnInitialized()@*OnInitializedメソッドをオーバーライドする(基底クラスのcomponentBaseに実装されているメソッドでオーバーライドで実装して使用する)*@
    {
        base.OnInitialized(); @*baseは派生クラスから基底クラスのメソッドにアクセスするためにつかう*@

        RoomsList.Add(new BlazorRoom() @*モデルクラスをインスタンス化して、プロパティに値を代入*@
        {
            Id = 201, @*インスタンス化と同時にプロパティに値をセット（本来はインスタンスの変数名.プロパティ名）*@
            RoomName = "シングルベッドルーム",
            Price = 36000,
            IsActive = true,
            RoomProps = new List<BlazorRoomProp> @*リスト型のプロパティはリストをインスタンス化を作成して、複数のオブジェクトを代入していく*@
                                  {
                         new Model.BlazorRoomProp{Id=1,Name="平方フィート",Value="330"},
                         new Model.BlazorRoomProp{Id=2,Name="占有率",Value="4"},
                      }
                        });

                        RoomsList.Add(new BlazorRoom() @*モデルクラスをインスタンス化して、プロパティに値を代入*@
                        {
                            Id = 301, @*インスタンス化と同時にプロパティに値をセット（本来はインスタンスの変数名.プロパティ名）*@
                            RoomName = "ダブルベッドルーム",
                            Price = 65000,
                            IsActive = true,
                            RoomProps = new List<BlazorRoomProp> @*リスト型のプロパティはリストをインスタンス化を作成して、複数のオブジェクトを代入していく*@
                                                      {
                           new Model.BlazorRoomProp{Id=1,Name="平方フィート",Value="150"},
                           new Model.BlazorRoomProp{Id=2,Name="占有率",Value="6"},

                          }
                        });

        AmenitiesList.Add(new BlazorAmenities()
        {
            Id = 111,
            Name = "ジム",
            Description = "ジムの利用可能時間：7am to 10pm"
        });

        AmenitiesList.Add(new BlazorAmenities()
        {
            Id = 222,
            Name = "プール",
            Description = "プールのオープン時間：6am to 10pm"

        });

        AmenitiesList.Add(new BlazorAmenities()
        {
            Id = 333,
            Name = "朝食",
            Description = "朝食の時間：7am to 10am"
        });
    }


    protected void RoomSelectionCounterChanged(bool isRoomSelected)
    {
        if (isRoomSelected)
        {
            SelectedRooms++;
        }
        else
        {
            SelectedRooms--;
        }
    }

    //AmenityのNameが渡される
    protected void AmenitySelectionChanged(string amenity)
    {
         SelectedAmenity = amenity;
    }
}

